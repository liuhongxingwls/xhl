jQuery(function(){
    var $ = jQuery;
    window.BaiUploader=BaiUploader;

    function BaiUploader(id){
        return this.init(id);
    }

    BaiUploader.prototype={
        constructor:BaiUploader,
        elstr:function(id){
            return function(){
                return '<div class="queueList">\
                            <div id="dndArea" class="placeholder">\
                                <div class="upfilePicker" id="filePicker-'+id+'"></div>\
                                <p>或将照片文件等拖到这里，单次最多可选300个</p>\
                            </div>\
                        </div>\
                        <div class="statusBar" style="display:none;">\
                            <div class="progress">\
                                <span class="text">0%</span>\
                                <span class="percentage"></span>\
                            </div>\
                            <div class="info"></div>\
                            <div class="btns">\
                                <div class="upfilePicker2" id="filePicker2-'+id+'"></div>\
                                <div class="uploadBtn">开始上传</div>\
                            </div>\
                    </div>';
            };
        },
        init:function(id){
            var strhtml=this.elstr(id)();
            var $patwrap=$('#'+id);
            if(!$patwrap){
                return;
            }

            $patwrap.addClass('baid-uploader');
            $patwrap.html(strhtml);

            //#uploader
            this.createfun(id);
            return this.uploader;
        },
        createfun:function(id){
            var _this=this;

            this.$id=id;

            this.$wrap = $('#'+id),

                // 图片容器
                this.$queue = $('<ul class="filelist"></ul>').appendTo(this.$wrap.find('.queueList') ),

                // 状态栏，包括进度和控制按钮
                this.$statusBar = this.$wrap.find('.statusBar'),

                // 文件总体选择信息。
                this.$info = this.$statusBar.find('.info'),

                // 上传按钮
                this.$upload = this.$wrap.find('.uploadBtn'),

                // 没选择文件之前的内容。
                this.$placeHolder = this.$wrap.find('.placeholder'),

                // 总体进度条
                this.$progress = this.$statusBar.find('.progress').hide(),

                // 添加的文件数量
                this.fileCount = 0,

                // 添加的文件总大小
                this.fileSize = 0,

                // 优化retina, 在retina下这个值是2
                this.ratio = window.devicePixelRatio || 1,

                // 缩略图大小
                this.thumbnailWidth = 110 * this.ratio,
                this.thumbnailHeight = 110 * this.ratio,

                // 可能有pedding, ready, uploading, confirm, done.
                this.state = 'pedding',
                // 所有文件的进度信息，key为file id
                this.percentages = {},
                this.supportTransition = (function(){
                    var s = document.createElement('p').style,
                        r = 'transition' in s ||
                            'WebkitTransition' in s ||
                            'MozTransition' in s ||
                            'msTransition' in s ||
                            'OTransition' in s;
                    s = null;
                    return r;
                })(),

                // WebUploader实例
                this.uploader;

            if ( !WebUploader.Uploader.support() ) {
                alert( 'Web Uploader 不支持您的浏览器！如果你使用的是IE浏览器，请尝试升级 flash 播放器');
                throw new Error( 'WebUploader does not support the browser you are using.' );
            }

            // 实例化
            this.uploader = WebUploader.create({
                pick: {
                    id: '#filePicker-'+id,
                    label: '点击选择图片或文件'
                },
                dnd: '#'+id+' .queueList',
                paste: document.body,

                accept: {
                    title: 'Images',
                    extensions: 'gif,jpg,jpeg,bmp,png,xls,xlsx,docx,doc,pptx,pdf,txt',
                    mimeTypes: '*'
                },

                // swf文件路径
//        swf: BASE_URL + '/js/Uploader.swf',

                disableGlobalDnd: true,

                chunked: true,
                server: 'http://2betop.net/fileupload.php',
                //server: '?r=upload/index', //2betop.net/fileupload.php
                fileNumLimit: 300,
                fileSizeLimit: 200 * 1024 * 1024,
                fileSingleSizeLimit: 50 * 1024 * 1024
            });

            // 添加“添加文件”的按钮，
            this.uploader.addButton({
                id: '#filePicker2-'+id,
                label: '继续添加'
            });

            //开始上传时，验证必选项
            this.validateInput=function(){
                var tlist=$("#"+id).find(".queueList .typelist");
                var errmsg;

                /*for(var i=0,len=tlist.length;i<len;i++){
                    var sel_val=$(tlist[i]).val();
                    if(sel_val<=0){
                        errmsg="请选择图片或文件所属类型";
                    }
                }*/

                if(errmsg){
                    alert(errmsg);
                    return false;
                }
                return true;
            };

            // 当有文件添加进来时执行，负责view的创建
            this.addFile=function( file ) {
                file.dataImgName=file.name;
                file.dataImgType=null;

                var types=_this.$wrap.siblings('.uploaderImgType').find('.typelist').html();

                var $li = $( '<li id="' + file.id + '">' +
                        '<p class="title"></p>' +
                        '<p class="imgWrap"><div class="imgType"></div></p>'+
                        '<p class="progress"><span></span></p>' +
                        '</li>' ),

                    $dataName=$('<input type="text" class="form-control" value='+file.name+' name="Upload[original_filename][]"/>').appendTo($li.find('.title')),

                    $dataType=$('<select class="typelist form-control" name="Upload[attachment_type][]"">'+types+'</select>').appendTo($li.find('.imgType')),

                    $btns = $('<div class="file-panel">' +
                        '<span class="cancel">删除</span>' +
                        '<span class="rotateRight">向右旋转</span>' +
                        '<span class="rotateLeft">向左旋转</span></div>').appendTo( $li ),
                    $prgress = $li.find('p.progress span'),
                    $wrap = $li.find( 'p.imgWrap' ),
                    $info = $('<p class="error"></p>'),
                    text='',

                //console.log($input_filename, $sel_type);
                    showError = function( code ) {
                        switch( code ) {
                            case 'exceed_size':
                                text = '文件大小超出';
                                break;

                            case 'interrupt':
                                text = '上传暂停';
                                break;

                            default:
                                text = '上传失败，请重试';
                                break;
                        }

//                $li.find("input[type=text]").attr("disabled", 'disabled');
//                $li.find("select").attr("disabled", 'disabled');
                        $info.text( text ).appendTo( $li );
                    };

                if ( file.getStatus() === 'invalid' ) {
                    showError( file.statusText );
                } else {
                    // @todo lazyload
                    //$wrap.text( '预览中' );
                    _this.uploader.makeThumb( file, function( error, src ) {
                        if ( error ) {

                            console.info(file);
                            var ext=file.ext;
                            switch(ext){
                                case 'xlsx':
                                case 'xls':
                                    $wrap.addClass('type-excel');
                                    break;
                                case 'docx':
                                case 'doc':
                                    $wrap.addClass('type-word');
                                    break;
                                case 'pdf':
                                    $wrap.addClass('type-pdf');
                                    break;
                                default:
                                    $wrap.addClass('type-default');
                                    $wrap.text(ext);
                                    break;
                            }
                            return;
                        }

                        var img = $('<img src="'+src+'">');
                        $wrap.empty().append( img );
                    }, _this.thumbnailWidth, _this.thumbnailHeight );

                    _this.percentages[ file.id ] = [ file.size, 0 ];
                    file.rotation = 0;
                }

                file.on('statuschange', function( cur, prev ) {
                    if ( prev === 'progress' ) {
                        $prgress.hide().width(0);
                    } else if ( prev === 'queued' ) {
                        //add by majia 20160613                //$li.off( 'mouseenter mouseleave' );
                        //$btns.remove();
                    }
                    // 成功
                    if ( cur === 'error' || cur === 'invalid' ) {
                        //console.log( file.statusText );
                        showError( file.statusText );
                        _this.percentages[ file.id ][ 1 ] = 1;
                    } else if ( cur === 'interrupt' ) {
                        showError( 'interrupt' );
                    } else if ( cur === 'queued' ) {
                        _this.percentages[ file.id ][ 1 ] = 0;
                    } else if ( cur === 'progress' ) {
                        $info.remove();
                        $prgress.css('display', 'block');
                    } else if ( cur === 'complete' ) {
                        $li.append( '<span class="success"></span>' );
                    }

                    $li.removeClass( 'state-' + prev ).addClass( 'state-' + cur );
                });

                $li.on( 'mouseenter', function() {
                    $btns.stop().animate({height: 30});
                });

                $li.on( 'mouseleave', function() {
                    $btns.stop().animate({height: 0});
                });

                $btns.on( 'click', 'span', function() {
                    var index = $(this).index(),
                        deg;

                    switch ( index ) {
                        case 0:
                            _this.uploader.removeFile( file );
                            return;

                        case 1:
                            file.rotation += 90;
                            break;

                        case 2:
                            file.rotation -= 90;
                            break;
                    }

                    if ( _this.supportTransition ) {
                        deg = 'rotate(' + file.rotation + 'deg)';
                        $wrap.css({
                            '-webkit-transform': deg,
                            '-mos-transform': deg,
                            '-o-transform': deg,
                            'transform': deg
                        });
                    } else {
                        $wrap.css( 'filter', 'progid:DXImageTransform.Microsoft.BasicImage(rotation='+ (~~((file.rotation/90)%4 + 4)%4) +')');
                    }


                });

                //修改名字
                $dataName.on('blur',function(){
                    var newval=$(this).val();
                    file.dataImgName=newval;
                });

                //修改所属类型
                $dataType.on('change',function(){
                    var newval=$(this).val();
                    file.dataImgType=newval;
                });

                $li.appendTo( _this.$queue );
            }

            // 负责view的销毁
            this.removeFile=function( file ) {
                var $li = $('#'+file.id);

                delete _this.percentages[ file.id ];
                _this.updateTotalProgress();
                $li.off().find('.file-panel').off().end().remove();
            }

            this.updateTotalProgress=function() {
                var loaded = 0,
                    total = 0,
                    spans = _this.$progress.children(),
                    percent;

                $.each( _this.percentages, function( k, v ) {
                    total += v[ 0 ];
                    loaded += v[ 0 ] * v[ 1 ];
                } );

                percent = total ? loaded / total : 0;

                spans.eq( 0 ).text( Math.round( percent * 100 ) + '%' );
                spans.eq( 1 ).css( 'width', Math.round( percent * 100 ) + '%' );
                _this.updateStatus();
            }

            this.updateStatus=function() {
                var text = '', stats;

                if ( _this.state === 'ready' ) {
                    text = '选中' + _this.fileCount + '个文件，共' +
                        WebUploader.formatSize( _this.fileSize ) + '。';
                } else if ( _this.state === 'confirm' ) {
                    stats = _this.uploader.getStats();
                    if ( stats.uploadFailNum ) {
                        text = '已成功上传' + stats.successNum+ '个文件，'+
                            stats.uploadFailNum + '个文件上传失败，<a class="retry" href="#">重新上传</a>失败文件'
                    }

                } else {
                    stats = _this.uploader.getStats();
                    text = '共' + _this.fileCount + '个（' +
                        WebUploader.formatSize( _this.fileSize )  +
                        '），已上传' + stats.successNum + '个';

                    if ( stats.uploadFailNum ) {
                        text += '，失败' + stats.uploadFailNum + '个';
                    }
                }

                _this.$info.html( text );
            }

            this.setState=function( val ) {
                var file, stats;

                if ( val === _this.state ) {
                    return;
                }

                _this.$upload.removeClass( 'state-' + _this.state );
                _this.$upload.addClass( 'state-' + val );
                _this.state = val;

                switch ( _this.state ) {
                    case 'pedding':
                        _this.$placeHolder.removeClass( 'element-invisible' );
                        _this.$queue.parent().removeClass('filled');
                        _this.$queue.hide();
                        _this.$statusBar.addClass( 'element-invisible' );
                        _this.uploader.refresh();
                        break;

                    case 'ready':
                        _this.$placeHolder.addClass( 'element-invisible' );
                        $( '#filePicker2-'+id ).removeClass( 'element-invisible');
                        _this.$queue.parent().addClass('filled');
                        _this.$queue.show();
                        _this.$statusBar.removeClass('element-invisible');
                        _this.uploader.refresh();
                        break;

                    case 'uploading':
                        $( '#filePicker2-'+id ).addClass( 'element-invisible' );
                        _this.$progress.show();
                        _this.$upload.text( '暂停上传' );
                        break;

                    case 'paused':
                        _this.$progress.show();
                        _this.$upload.text( '继续上传' );
                        break;

                    case 'confirm':
                        _this.$progress.hide();
                        _this.$upload.text( '开始上传' ).addClass( 'disabled' );

                        stats = _this.uploader.getStats();
                        if ( stats.successNum && !stats.uploadFailNum ) {
                            _this.setState( 'finish' );
                            return;
                        }
                        $( '#filePicker2-'+id ).removeClass( 'element-invisible');
                        this.$upload.removeClass( 'disabled' );
                        break;
                    case 'finish':
                        stats = _this.uploader.getStats();
                        if ( stats.successNum ) {
                            //console.info( '上传成功' );
                            $( '#filePicker2-'+id ).removeClass( 'element-invisible');
                            _this.$upload.removeClass( 'disabled' );
                        } else {
                            // 没有成功的图片，重设
                            _this.state = 'done';
                            location.reload();
                        }
                        break;
                }

                _this.updateStatus();
            }

            this.uploader.onUploadProgress = function( file, percentage ) {
                var $li = $('#'+file.id),
                    $percent = $li.find('.progress span');

                $percent.css( 'width', percentage * 100 + '%' );
                _this.percentages[ file.id ][ 1 ] = percentage;
                _this.updateTotalProgress();
            };

            this.uploader.onFileQueued = function( file ) {
                _this.fileCount++;
                _this.fileSize += file.size;

                if ( _this.fileCount === 1 ) {
                    _this.$placeHolder.addClass( 'element-invisible' );
                    _this.$statusBar.show();
                }

                _this.addFile( file );
                _this.setState( 'ready' );
                _this.updateTotalProgress();
            };

            this.uploader.onFileDequeued = function( file ) {
                _this.fileCount--;
                _this.fileSize -= file.size;

                if ( !_this.fileCount ) {
                    _this.setState( 'pedding' );
                }

                _this.removeFile( file );
                _this.updateTotalProgress();

            };


            this.uploader.on( 'all', function( type ) {
                var stats;
                switch( type ) {
                    case 'uploadFinished':
                        _this.setState( 'confirm' );
                        break;

                    case 'startUpload':
                        _this.setState( 'uploading' );
                        break;

                    case 'stopUpload':
                        _this.setState( 'paused' );
                        break;

                }
            });

            this.uploader.onError = function( code ) {
                var err_text="";
                if(code=="F_DUPLICATE"){
                    err_text="选择了重复的图片或文件";
                }else if(code=="Q_TYPE_DENIED"){
                    err_text="选择了不支持的文件类型";
                }

                if(err_text){
                    alert(err_text);
                }else{
                    alert(code);
                }

            };

            this.$upload.on('click', function() {
                if ( $(this).hasClass( 'disabled' ) ) {
                    return false;
                }

                if ( _this.state === 'ready' ) {
                    var valid=_this.validateInput();
                    if(valid){
                        _this.uploader.upload();
                    }

                } else if ( _this.state === 'paused' ) {
                    _this.uploader.upload();
                } else if ( _this.state === 'uploading' ) {
                    _this.uploader.stop();
                }
            });

            //开始上传前
            this.uploader.on('uploadBeforeSend',function(block, data, headers){
                var new_data=[];
                if($(".upload_otherdata").length>0)
                {
                    $(".upload_otherdata").each(function(i, obj){

                        var objs={};
                        objs[$(obj).attr("data-key")]=$(obj).val();
                        new_data.push(objs);
                        //new_data[$(obj).attr("data-key")] = $(obj).val();
                    /**/
                    })

                    data = $.extend( data, {
                        other_data:JSON.stringify(new_data)
                    });
                }

            });

            this.$info.on( 'click', '.retry', function() {
                _this.uploader.retry();
            } );

            this.$info.on( 'click', '.ignore', function() {
                //alert( 'todo' );
            } );

            this.$upload.addClass( 'state-' + _this.state );
            this.updateTotalProgress();

            this.uploader.resetInit=function(){
                //console.info('webuploader-demo.min.js  '+id+'  resetInit........');
                _this.uploader.destroy();

                //重置html
                var strhtml=_this.elstr(id)();
                //console.info(id);
                var eleUploader=$('#'+id);

                eleUploader.html(strhtml);
                _this.createfun(id);
            }


        }//end create and bind

    };


});